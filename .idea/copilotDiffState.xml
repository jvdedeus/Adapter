<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/Diagrama/Temperaturas.puml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Diagrama/Temperaturas.puml" />
              <option name="originalContent" value="@startuml&#10;&#10;package org.example {&#10;    class Celsius {&#10;        - temperatura: double&#10;        + getTemperatura(): double&#10;    }&#10;    class Fahrenheit {&#10;        - temperatura: double&#10;        + getTemperatura(): double&#10;    }&#10;    class Kelvin {&#10;        - temperatura: double&#10;        + getTemperatura(): double&#10;    }&#10;&#10;    class CelsiusFahrenheit {&#10;        - celsius: Celsius&#10;        + getTemperatura(): double&#10;    }&#10;    class CelsiusKelvin {&#10;        - celsius: Celsius&#10;        + getTemperatura(): double&#10;    }&#10;    class FahrenheitCelsius {&#10;        - fahrenheit: Fahrenheit&#10;        + getTemperatura(): double&#10;    }&#10;    class FahrenheitKelvin {&#10;        - fahrenheit: Fahrenheit&#10;        + getTemperatura(): double&#10;    }&#10;    class KelvinCelsius {&#10;        - kelvin: Kelvin&#10;        + getTemperatura(): double&#10;    }&#10;    class KelvinFahrenheit {&#10;        - kelvin: Kelvin&#10;        + getTemperatura(): double&#10;    }&#10;&#10;    CelsiusFahrenheit --&gt; Celsius&#10;    CelsiusKelvin --&gt; Celsius&#10;    FahrenheitCelsius --&gt; Fahrenheit&#10;    FahrenheitKelvin --&gt; Fahrenheit&#10;    KelvinCelsius --&gt; Kelvin&#10;    KelvinFahrenheit --&gt; Kelvin&#10;}&#10;&#10;@enduml&#10;&#10;" />
              <option name="updatedContent" value="@startuml&#10;&#10;package org.example {&#10;    abstract class Temperatura {&#10;        - temperatura: double&#10;        + getTemperatura(): double&#10;    }&#10;    class Celsius {&#10;    }&#10;    class Fahrenheit {&#10;    }&#10;    class Kelvin {&#10;    }&#10;&#10;    class CelsiusFahrenheit {&#10;        - celsius: Celsius&#10;        + getTemperatura(): double&#10;    }&#10;    class CelsiusKelvin {&#10;        - celsius: Celsius&#10;        + getTemperatura(): double&#10;    }&#10;    class FahrenheitCelsius {&#10;        - fahrenheit: Fahrenheit&#10;        + getTemperatura(): double&#10;    }&#10;    class FahrenheitKelvin {&#10;        - fahrenheit: Fahrenheit&#10;        + getTemperatura(): double&#10;    }&#10;    class KelvinCelsius {&#10;        - kelvin: Kelvin&#10;        + getTemperatura(): double&#10;    }&#10;    class KelvinFahrenheit {&#10;        - kelvin: Kelvin&#10;        + getTemperatura(): double&#10;    }&#10;&#10;    Celsius --|&gt; Temperatura&#10;    Fahrenheit --|&gt; Temperatura&#10;    Kelvin --|&gt; Temperatura&#10;&#10;    CelsiusFahrenheit --&gt; Celsius&#10;    CelsiusKelvin --&gt; Celsius&#10;    FahrenheitCelsius --&gt; Fahrenheit&#10;    FahrenheitKelvin --&gt; Fahrenheit&#10;    KelvinCelsius --&gt; Kelvin&#10;    KelvinFahrenheit --&gt; Kelvin&#10;}&#10;&#10;@enduml" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/Adaptee.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/Adaptee.java" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/Adapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/Adapter.java" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/Alvo.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/Alvo.java" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/Celsius.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/Celsius.java" />
              <option name="originalContent" value="package org.example;&#10;&#10;public class Celsius {&#10;    private double temperatura;&#10;&#10;    public Celsius(double temperatura) {&#10;        this.temperatura = temperatura;&#10;    }&#10;&#10;    public double getTemperatura() {&#10;        return temperatura;&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package org.example;&#10;&#10;public class Celsius extends Temperatura {&#10;    public Celsius(double temperatura) {&#10;        super(temperatura);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/CelsiusToFahrenheitAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/CelsiusToFahrenheitAdapter.java" />
              <option name="updatedContent" value="package org.example;&#10;&#10;public class CelsiusToFahrenheitAdapter extends Fahrenheit {&#10;    public CelsiusToFahrenheitAdapter(Celsius celsius) {&#10;        super((celsius.getTemperatura() * 9.0 / 5.0) + 32);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/CelsiusToKelvinAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/CelsiusToKelvinAdapter.java" />
              <option name="updatedContent" value="package org.example;&#10;&#10;public class CelsiusToKelvinAdapter extends Kelvin {&#10;    public CelsiusToKelvinAdapter(Celsius celsius) {&#10;        super(celsius.getTemperatura() + 273.15);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/Fahrenheit.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/Fahrenheit.java" />
              <option name="originalContent" value="package org.example;&#10;&#10;public class Fahrenheit {&#10;    private double temperatura;&#10;&#10;    public Fahrenheit(double temperatura) {&#10;        this.temperatura = temperatura;&#10;    }&#10;&#10;    public double getTemperatura() {&#10;        return temperatura;&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package org.example;&#10;&#10;public class Fahrenheit extends Temperatura {&#10;    public Fahrenheit(double temperatura) {&#10;        super(temperatura);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/FahrenheitToCelsiusAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/FahrenheitToCelsiusAdapter.java" />
              <option name="updatedContent" value="package org.example;&#10;&#10;public class FahrenheitToCelsiusAdapter extends Celsius {&#10;    public FahrenheitToCelsiusAdapter(Fahrenheit fahrenheit) {&#10;        super((fahrenheit.getTemperatura() - 32) * 5.0 / 9.0);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/FahrenheitToKelvinAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/FahrenheitToKelvinAdapter.java" />
              <option name="updatedContent" value="package org.example;&#10;&#10;public class FahrenheitToKelvinAdapter extends Kelvin {&#10;    public FahrenheitToKelvinAdapter(Fahrenheit fahrenheit) {&#10;        super((fahrenheit.getTemperatura() - 32) * 5.0 / 9.0 + 273.15);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/Kelvin.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/Kelvin.java" />
              <option name="originalContent" value="package org.example;&#10;&#10;public class Kelvin {&#10;    private double temperatura;&#10;&#10;    public Kelvin(double temperatura) {&#10;        this.temperatura = temperatura;&#10;    }&#10;&#10;    public double getTemperatura() {&#10;        return temperatura;&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package org.example;&#10;&#10;public class Kelvin extends Temperatura {&#10;    public Kelvin(double temperatura) {&#10;        super(temperatura);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/KelvinToCelsiusAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/KelvinToCelsiusAdapter.java" />
              <option name="updatedContent" value="package org.example;&#10;&#10;public class KelvinToCelsiusAdapter extends Celsius {&#10;    public KelvinToCelsiusAdapter(Kelvin kelvin) {&#10;        super(kelvin.getTemperatura() - 273.15);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/Main.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/Main.java" />
              <option name="originalContent" value="package org.example;&#10;&#10;//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or&#10;// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        //TIP Press &lt;shortcut actionId=&quot;ShowIntentionActions&quot;/&gt; with your caret at the highlighted text&#10;        // to see how IntelliJ IDEA suggests fixing it.&#10;        System.out.printf(&quot;Hello and welcome!&quot;);&#10;&#10;        for (int i = 1; i &lt;= 5; i++) {&#10;            //TIP Press &lt;shortcut actionId=&quot;Debug&quot;/&gt; to start debugging your code. We have set one &lt;icon src=&quot;AllIcons.Debugger.Db_set_breakpoint&quot;/&gt; breakpoint&#10;            // for you, but you can always add more by pressing &lt;shortcut actionId=&quot;ToggleLineBreakpoint&quot;/&gt;.&#10;            System.out.println(&quot;i = &quot; + i);&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="package org.example;&#10;&#10;//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or&#10;// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        Celsius celsius = new Celsius(25);&#10;        System.out.println(&quot;Temperatura em Celsius: &quot; + celsius.getTemperatura());&#10;&#10;        Fahrenheit fahrenheit = new Fahrenheit(77);&#10;        Celsius adaptadoDeFahrenheit = new FahrenheitToCelsiusAdapter(fahrenheit);&#10;        System.out.println(&quot;77 Fahrenheit em Celsius: &quot; + adaptadoDeFahrenheit.getTemperatura());&#10;&#10;        Kelvin kelvin = new Kelvin(298.15);&#10;        Celsius adaptadoDeKelvin = new KelvinToCelsiusAdapter(kelvin);&#10;        System.out.println(&quot;298.15 Kelvin em Celsius: &quot; + adaptadoDeKelvin.getTemperatura());&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/Temperatura.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/Temperatura.java" />
              <option name="updatedContent" value="package org.example;&#10;&#10;public abstract class Temperatura {&#10;    protected double temperatura;&#10;&#10;    public Temperatura(double temperatura) {&#10;        this.temperatura = temperatura;&#10;    }&#10;&#10;    public double getTemperatura() {&#10;        return temperatura;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/test/java/CelsiusTest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/test/java/CelsiusTest.java" />
              <option name="originalContent" value="import org.example.*;&#10;import org.junit.jupiter.api.BeforeEach;&#10;import org.junit.jupiter.api.Test;&#10;import static org.junit.jupiter.api.Assertions.*;&#10;&#10;public class CelsiusTest {&#10;    private Celsius celsius;&#10;    private double baseTemp;&#10;&#10;    @BeforeEach&#10;    public void setUp() {&#10;        celsius = new Celsius(baseTemp);&#10;        baseTemp = 26.85;&#10;    }&#10;&#10;    @Test&#10;    public void testCelsiusToFahrenheit() {&#10;        CelsiusFahrenheit adapter = new CelsiusFahrenheit(celsius);&#10;        double expected = baseTemp * 9/5 + 32;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;&#10;    @Test&#10;    public void testCelsiusToKelvin() {&#10;        CelsiusKelvin adapter = new CelsiusKelvin(celsius);&#10;        double expected = baseTemp + 273.15;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="import org.example.*;&#10;import org.junit.jupiter.api.BeforeEach;&#10;import org.junit.jupiter.api.Test;&#10;import static org.junit.jupiter.api.Assertions.*;&#10;&#10;public class CelsiusTest {&#10;    private Celsius celsius;&#10;    private double baseTemp;&#10;&#10;    @BeforeEach&#10;    public void setUp() {&#10;        baseTemp = 26.85;&#10;        celsius = new Celsius(baseTemp);&#10;    }&#10;&#10;    @Test&#10;    public void testCelsiusToFahrenheit() {&#10;        CelsiusFahrenheit adapter = new CelsiusFahrenheit(celsius);&#10;        double expected = baseTemp * 9/5 + 32;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;&#10;    @Test&#10;    public void testCelsiusToKelvin() {&#10;        CelsiusKelvin adapter = new CelsiusKelvin(celsius);&#10;        double expected = baseTemp + 273.15;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/test/java/FahrenheitTest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/test/java/FahrenheitTest.java" />
              <option name="originalContent" value="import org.example.*;&#10;import org.junit.jupiter.api.BeforeEach;&#10;import org.junit.jupiter.api.Test;&#10;import static org.junit.jupiter.api.Assertions.*;&#10;&#10;public class FahrenheitTest {&#10;    private Fahrenheit fahrenheit;&#10;    private double baseTemp;&#10;&#10;    @BeforeEach&#10;    public void setUp() {&#10;        fahrenheit = new Fahrenheit(baseTemp);&#10;        baseTemp = 80.33;&#10;    }&#10;&#10;    @Test&#10;    public void testFahrenheitToCelsius() {&#10;        FahrenheitCelsius adapter = new FahrenheitCelsius(fahrenheit);&#10;        double expected = (baseTemp - 32) * 5/9;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;&#10;    @Test&#10;    public void testFahrenheitToKelvin() {&#10;        FahrenheitKelvin adapter = new FahrenheitKelvin(fahrenheit);&#10;        double expected = (baseTemp - 32) * 5/9 + 273.15;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="import org.example.*;&#10;import org.junit.jupiter.api.BeforeEach;&#10;import org.junit.jupiter.api.Test;&#10;import static org.junit.jupiter.api.Assertions.*;&#10;&#10;public class FahrenheitTest {&#10;    private Fahrenheit fahrenheit;&#10;    private double baseTemp;&#10;&#10;    @BeforeEach&#10;    public void setUp() {&#10;        baseTemp = 80.33;&#10;        fahrenheit = new Fahrenheit(baseTemp);&#10;    }&#10;&#10;    @Test&#10;    public void testFahrenheitToCelsius() {&#10;        FahrenheitCelsius adapter = new FahrenheitCelsius(fahrenheit);&#10;        double expected = (baseTemp - 32) * 5/9;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;&#10;    @Test&#10;    public void testFahrenheitToKelvin() {&#10;        FahrenheitKelvin adapter = new FahrenheitKelvin(fahrenheit);&#10;        double expected = (baseTemp - 32) * 5/9 + 273.15;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/test/java/KelvinTest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/test/java/KelvinTest.java" />
              <option name="originalContent" value="import org.example.*;&#10;import org.junit.jupiter.api.BeforeEach;&#10;import org.junit.jupiter.api.Test;&#10;import static org.junit.jupiter.api.Assertions.*;&#10;&#10;public class KelvinTest {&#10;    private Kelvin kelvin;&#10;    private double baseTemp;&#10;&#10;    @BeforeEach&#10;    public void setUp() {&#10;        kelvin = new Kelvin(baseTemp);&#10;        baseTemp = 300.0;&#10;    }&#10;&#10;    @Test&#10;    public void testKelvinToCelsius() {&#10;        KelvinCelsius adapter = new KelvinCelsius(kelvin);&#10;        double expected = baseTemp - 273.15;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;&#10;    @Test&#10;    public void testKelvinToFahrenheit() {&#10;        KelvinFahrenheit adapter = new KelvinFahrenheit(kelvin);&#10;        double expected = (baseTemp - 273.15) * 9/5 + 32;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="import org.example.*;&#10;import org.junit.jupiter.api.BeforeEach;&#10;import org.junit.jupiter.api.Test;&#10;import static org.junit.jupiter.api.Assertions.*;&#10;&#10;public class KelvinTest {&#10;    private Kelvin kelvin;&#10;    private double baseTemp;&#10;&#10;    @BeforeEach&#10;    public void setUp() {&#10;        baseTemp = 300.0;&#10;        kelvin = new Kelvin(baseTemp);&#10;    }&#10;&#10;    @Test&#10;    public void testKelvinToCelsius() {&#10;        KelvinCelsius adapter = new KelvinCelsius(kelvin);&#10;        double expected = baseTemp - 273.15;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;&#10;    @Test&#10;    public void testKelvinToFahrenheit() {&#10;        KelvinFahrenheit adapter = new KelvinFahrenheit(kelvin);&#10;        double expected = (baseTemp - 273.15) * 9/5 + 32;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/test/java/org/example/CelsiusTest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/test/java/org/example/CelsiusTest.java" />
              <option name="updatedContent" value="package org.example;&#10;&#10;import org.junit.jupiter.api.BeforeEach;&#10;import org.junit.jupiter.api.Test;&#10;import static org.junit.jupiter.api.Assertions.*;&#10;&#10;public class CelsiusTest {&#10;    private Celsius celsius;&#10;    private final double baseTemp = 26.85;&#10;&#10;    @BeforeEach&#10;    public void setUp() {&#10;        celsius = new Celsius(baseTemp);&#10;    }&#10;&#10;    @Test&#10;    public void testCelsiusToFahrenheit() {&#10;        CelsiusFahrenheit adapter = new CelsiusFahrenheit(celsius);&#10;        double expected = baseTemp * 9/5 + 32;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;&#10;    @Test&#10;    public void testCelsiusToKelvin() {&#10;        CelsiusKelvin adapter = new CelsiusKelvin(celsius);&#10;        double expected = baseTemp + 273.15;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/test/java/org/example/FahrenheitTest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/test/java/org/example/FahrenheitTest.java" />
              <option name="updatedContent" value="package org.example;&#10;&#10;import org.junit.jupiter.api.BeforeEach;&#10;import org.junit.jupiter.api.Test;&#10;import static org.junit.jupiter.api.Assertions.*;&#10;&#10;public class FahrenheitTest {&#10;    private Fahrenheit fahrenheit;&#10;    private final double baseTemp = 80.33;&#10;&#10;    @BeforeEach&#10;    public void setUp() {&#10;        fahrenheit = new Fahrenheit(baseTemp);&#10;    }&#10;&#10;    @Test&#10;    public void testFahrenheitToCelsius() {&#10;        FahrenheitCelsius adapter = new FahrenheitCelsius(fahrenheit);&#10;        double expected = (baseTemp - 32) * 5/9;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;&#10;    @Test&#10;    public void testFahrenheitToKelvin() {&#10;        FahrenheitKelvin adapter = new FahrenheitKelvin(fahrenheit);&#10;        double expected = (baseTemp - 32) * 5/9 + 273.15;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/test/java/org/example/KelvinTest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/test/java/org/example/KelvinTest.java" />
              <option name="updatedContent" value="package org.example;&#10;&#10;import org.junit.jupiter.api.BeforeEach;&#10;import org.junit.jupiter.api.Test;&#10;import static org.junit.jupiter.api.Assertions.*;&#10;&#10;public class KelvinTest {&#10;    private Kelvin kelvin;&#10;    private final double baseTemp = 300.0;&#10;&#10;    @BeforeEach&#10;    public void setUp() {&#10;        kelvin = new Kelvin(baseTemp);&#10;    }&#10;&#10;    @Test&#10;    public void testKelvinToCelsius() {&#10;        KelvinCelsius adapter = new KelvinCelsius(kelvin);&#10;        double expected = baseTemp - 273.15;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;&#10;    @Test&#10;    public void testKelvinToFahrenheit() {&#10;        KelvinFahrenheit adapter = new KelvinFahrenheit(kelvin);&#10;        double expected = (baseTemp - 273.15) * 9/5 + 32;&#10;        assertEquals(expected, adapter.getTemperatura(), 0.01);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>